{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAuBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACrC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC5BC,aAAY,KACNN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAErDA,EAAM,G,CA9BbL,EAAKa,iBAAiB,UAEtB,SAAyBC,GACvBA,EAAMC,iBAEN,IAAIC,EAAOC,OAAOjB,EAAKgB,KAAKE,OACxBb,EAAQY,OAAOjB,EAAKK,MAAMa,OAC1BC,EAASF,OAAOjB,EAAKmB,OAAOD,OAEhC,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAciB,EAAGf,GACdgB,MAAKC,IACJxB,EAAAyB,OAAOC,QAAQF,EAAO,IAEvBG,OAAMC,IACL5B,EAAAyB,OAAOI,QAAQD,EAAM,IAEzBrB,GAASW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onBntCreateProm);\n\nfunction onBntCreateProm(event) {\n  event.preventDefault();\n\n  let step = Number(form.step.value);\n  let delay = Number(form.delay.value);\n  let amount = Number(form.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(succes => {\n        Notify.success(succes);\n      })\n      .catch(error => {\n        Notify.failure(error);\n      });\n    delay += step;\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n   return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setInterval","addEventListener","event","preventDefault","step","Number","value","amount","i","then","succes","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.0ff5f443.js.map"}