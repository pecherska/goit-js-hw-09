{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAuBpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACrC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC5BC,aAAY,WACNN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IA9BPL,EAAKc,iBAAiB,UAEtB,SAAyBC,GACvBA,EAAMC,iBAMN,IAJA,IAAIC,EAAOC,OAAOlB,EAAKiB,KAAKE,OACxBd,EAAQa,OAAOlB,EAAKK,MAAMc,OAC1BC,EAASF,OAAOlB,EAAKoB,OAAOD,OAEvBE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChClB,EAAckB,EAAGhB,GACdiB,MAAK,SAAAC,GACJzB,EAAA0B,OAAOC,QAAQF,E,IAEhBG,OAAM,SAAAC,GACL7B,EAAA0B,OAAOI,QAAQD,E,IAEnBtB,GAASY,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onBntCreateProm);\n\nfunction onBntCreateProm(event) {\n  event.preventDefault();\n\n  let step = Number(form.step.value);\n  let delay = Number(form.delay.value);\n  let amount = Number(form.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(succes => {\n        Notify.success(succes);\n      })\n      .catch(error => {\n        Notify.failure(error);\n      });\n    delay += step;\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n   return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setInterval","concat","addEventListener","event","preventDefault","step","Number","value","amount","i","then","succes","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.982110ee.js.map"}